---
import Layout from '../layouts/Layout.astro'
import { renderInnerHTML } from 'number-flow'
---

<Layout>
	<div>
		Text node{' '}
		<number-flow-group>
			<number-flow
				id="flow1"
				data-testid="flow1"
				set:html={renderInnerHTML(42, {
					format: { style: 'currency', currency: 'USD' },
					locales: 'zh-CN',
					numberPrefix: ':',
					numberSuffix: '/mo'
				})}
			/><number-flow id="flow2" data-testid="flow2" set:html={renderInnerHTML(42)} />
		</number-flow-group>
	</div>
	<button id="change"> Change and pause </button>
	<br />
	<button id="resume"> Resume </button>
</Layout>

<script>
	import 'number-flow'
	import { continuous } from 'number-flow'
	import 'number-flow/group'

	const [flow1, flow2] = document.getElementsByTagName('number-flow')
	const changeBtn = document.getElementById('change')
	const resumeBtn = document.getElementById('resume')

	if (flow1 && flow2) {
		flow1.addEventListener('animationsstart', () => {
			console.log('start')
		})
		flow1.addEventListener('animationsfinish', () => {
			console.log('finish')
		})
		flow1.transformTiming = { easing: 'linear', duration: 500 }
		flow1.spinTiming = { easing: 'linear', duration: 800 }
		flow1.opacityTiming = { easing: 'linear', duration: 500 }
		flow1.format = { style: 'currency', currency: 'USD' }
		flow1.trend = () => -1
		flow1.locales = 'zh-CN'
		flow1.numberPrefix = ':'
		flow1.numberSuffix = '/mo'
		flow1.update(42)

		flow2.respectMotionPreference = false
		flow2.plugins = [continuous]
		flow2.digits = { 0: { max: 2 } }
		flow2.transformTiming = { easing: 'linear', duration: 500 }
		flow2.spinTiming = { easing: 'linear', duration: 800 }
		flow2.opacityTiming = { easing: 'linear', duration: 500 }
		flow2.update(42)
	}

	changeBtn?.addEventListener('click', () => {
		flow1?.update(152)
		flow2?.update(152)
		queueMicrotask(() => {
			;[
				...(flow1?.shadowRoot?.getAnimations() ?? []),
				...(flow2?.shadowRoot?.getAnimations() ?? [])
			].forEach((a) => {
				a.pause()
				a.currentTime = 300
			})
		})
	})

	resumeBtn?.addEventListener('click', () => {
		;[
			...(flow1?.shadowRoot?.getAnimations() ?? []),
			...(flow2?.shadowRoot?.getAnimations() ?? [])
		].forEach((a) => {
			a.play()
		})
	})
</script>
